/*
 * Copyright (c) 2013 Haulmont Technology Ltd. All Rights Reserved.
 * Haulmont Technology proprietary and confidential.
 * Use is subject to license terms.
 */

def defaultVersion = '4.2'

def BUILD_VERSION = 'buildVersion'
def BUILD_VCS_NUMBER = 'buildVcsNumber'

allprojects {
    ext.artifactGroup = 'com.haulmont.workflow'
    ext.artifactVersion = rootProject.hasProperty(BUILD_VERSION) ? 
                                    rootProject[BUILD_VERSION].replace('-SNAPSHOT', '') : defaultVersion
    ext.isSnapshot = !rootProject.hasProperty(BUILD_VERSION) || rootProject[BUILD_VERSION].endsWith('-SNAPSHOT')
    ext.vcs = 'svn'
    //ext.tomcatDir = rootDir.absolutePath + '/../tomcat'
}

buildscript {
	def cubaPluginVersion = '4.1-SNAPSHOT'	
	def CUBA_PLUGIN_VERSION = 'cubaPluginVersion'

	cubaPluginVersion = rootProject.hasProperty(CUBA_PLUGIN_VERSION) ? rootProject[CUBA_PLUGIN_VERSION] : cubaPluginVersion
		
    repositories {
        mavenLocal()
        maven {
            credentials {
                username System.getenv('HAULMONT_REPOSITORY_USER')
                password System.getenv('HAULMONT_REPOSITORY_PASSWORD')
            }
            url "http://repository.haulmont.com:8587/nexus/content/groups/work"
        }
    }
    dependencies {
        classpath group: 'com.haulmont.gradle', name: 'cuba-plugin', version: cubaPluginVersion
    }
}

apply(plugin: 'idea')
apply(plugin: 'cuba')

def sharedLibModule = project(':workflow-shared-lib')
def globalModule = project(':workflow-global')
def coreModule = project(':workflow-core')
def guiModule = project(':workflow-gui')
def webModule = project(':workflow-web')

def servletApi = [group: 'org.apache.tomcat', name: 'servlet-api', version: '6.0.20']
def json = [group: 'org.json', name: 'json', version: '20090211']
def hibernate = [group: 'org.hibernate', name: 'hibernate-core', version: '3.3.1.GA', transitive: false];
def hsqldb = [group: 'org.hsqldb', name: 'hsqldb', version: '2.2.9']


def baseVersion = artifactVersion + (isSnapshot ? '-SNAPSHOT' : '')

configure([sharedLibModule, globalModule, coreModule, guiModule, webModule]) {
    apply(plugin: 'java')
    apply(plugin: 'idea')
    apply(plugin: 'maven')
    apply(plugin: 'cuba')
    apply(plugin: 'groovy')

    sourceSets {
        main {
            groovy { srcDir 'src' }
        }
        test {
            groovy { srcDir 'test' }
        }
    }

    dependencies {
        compile(group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.1.6')
        compile(group: 'asm', name: 'asm', version: '3.2')

        compile(group: 'com.haulmont.cuba', name: 'cuba-global', version: baseVersion)
        testCompile(group: 'junit', name: 'junit', version: '4.5')
    }

    task sourceJar(type: Jar) {
        from file('src')
        classifier = 'sources'
    } 

    artifacts {
        archives sourceJar
    }
}

configure(sharedLibModule) {
    dependencies {
        compile(hibernate)
        compile(group: 'org.springframework', name: 'spring-tx', version: '3.1.3.RELEASE')
        compile(group: 'org.springframework', name: 'spring-jdbc', version: '3.1.3.RELEASE')
        compile(group: 'org.springframework', name: 'spring-orm', version: '3.1.3.RELEASE')
    }
}

configure(globalModule) {
    task enhance(type: CubaEnhancing, dependsOn: compileJava) {
        persistenceXml = "$globalModule.projectDir/src/workflow-persistence.xml"
    }
}

configure(coreModule) {
    configurations {
        jdbc
        dbscripts
    }

    dependencies {
        compile(globalModule)
        compile(sharedLibModule)
        compile(group: 'com.haulmont.cuba', name: 'cuba-core', version: baseVersion)
        testCompile(group: 'com.haulmont.cuba', name: 'cuba-core', version: baseVersion, classifier: 'tests')
        compile(group: 'com.haulmont.thirdparty', name: 'jbpm', version: '4.4.20130109')
        compile(json)
        runtime(group: 'de.odysseus.juel', name: 'juel', version: '2.1.0')
        compile(hibernate)
        runtime(group: 'org.slf4j', name: 'slf4j-api', version: '1.5.2')
        runtime(group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.5.2')
        runtime(group: 'org.javassist', name: 'javassist', version: '3.18.0-GA')
        provided(servletApi)
        jdbc(hsqldb)
        dbscripts(group: 'com.haulmont.cuba', name: 'cuba-core', version: baseVersion, classifier: 'db', ext: 'zip')
    }

    assembleDbScripts << {
        copy {
            from new File(projectDir, 'db')
            into "$buildDir/db/20-workflow"
        }
    }

    def hsqlDbName = 'cubadb'

    task startDb(description: 'Starts local HSQLDB server', type: CubaHsqlStart) {
        dbName = hsqlDbName
    }

    task stopDb(description: 'Stops local HSQLDB server', type: CubaHsqlStop)  {
        dbName = hsqlDbName
    }

    task killDb(description: 'Kill local HSQLDB server process running on port 9001', type: CubaKillProcess) {
        port = 9001
    }

    task removeDb(description: 'Removes local HSQL database', type: Delete) {
        delete new File("$rootProject.projectDir/data")
    }

    task createDb(dependsOn: assemble, description: 'Creates local HSQL database', type: CubaDbCreation) {
        dbms = 'hsql'
        dbName = hsqlDbName
        dbUser = 'sa'
        dbPassword = ''
    }
}

configure(guiModule) {
    dependencies {
        compile(globalModule)
        compile(group: 'com.haulmont.cuba', name: 'cuba-gui', version: baseVersion)
    }

	task testsJar(dependsOn: testClasses, type: Jar) {
        from sourceSets.main.output.classesDir
        from sourceSets.test.output.classesDir
        classifier = 'tests'
    }

    artifacts {
        archives testsJar
    }
}

configure(webModule) {
    configurations {
        webcontent
    }

    dependencies {
        compile(sharedLibModule)
        compile(globalModule)
        compile(guiModule)
        compile(group: 'com.haulmont.cuba', name: 'cuba-web', version: baseVersion)
        compile(json)
        provided(servletApi)
        webcontent(group: 'com.haulmont.thirdparty', name: 'yui', version: '2.8.1')
    }

    jar {
        manifest {
            attributes("Vaadin-Widgetsets": "com.haulmont.cuba.toolkit.gwt.WidgetSet")
        }
    }

    task webArchive(type: Zip) {
        from file('web')
        classifier = 'web'
    }

    artifacts {
        archives webArchive
    }

    task setupYui(description: 'Sets up YUI library') << {
        configurations.webcontent.files.each { dep ->
            copy {
                from zipTree(dep.absolutePath)
                into new File(webModule.projectDir, 'web/wfdesigner/lib/yui')
            }
        }
    }
    assemble.dependsOn setupYui
}
